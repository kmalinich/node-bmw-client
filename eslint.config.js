const globals = require('globals');
const js      = require('@eslint/js');

const eslintPlugins = {
	node    : require('eslint-plugin-node'),
	promise : require('eslint-plugin-promise'),
};


const eslintConfig = {
	files : [
		'*.js',
		'lib/*.js',
		'modules/*.js',
		'share/*.js',
	],

	plugins : eslintPlugins,

	languageOptions : {
		ecmaVersion : 12,

		sourceType : 'module',

		globals : {
			...globals.amd,
			...globals.es2021,
			...globals.node,

			ABG         : false,
			ACC         : false,
			ACSM        : false,
			AFS         : false,
			AHL         : false,
			AHM         : false,
			ALBV        : false,
			AMP         : false,
			ANZV        : false,
			ARS         : false,
			ASC         : false,
			ASST        : false,
			BMBT        : false,
			CAS         : false,
			CCC         : false,
			CCM         : false,
			CDC         : false,
			CDCD        : false,
			CID         : false,
			CNV         : false,
			CON         : false,
			CSU         : false,
			CVMV        : false,
			DAB         : false,
			DCT         : false,
			DIA         : false,
			DME         : false,
			DMEK        : false,
			DSC         : false,
			DSP         : false,
			DSPC        : false,
			DWA         : false,
			DXCRB       : false,
			EDCK        : false,
			EGS         : false,
			EHC         : false,
			EKM         : false,
			EKP         : false,
			EWS         : false,
			FBZV        : false,
			FEM         : false,
			FHK         : false,
			FID         : false,
			FLA         : false,
			FMBT        : false,
			GM          : false,
			GR          : false,
			GT          : false,
			GTF         : false,
			GWS         : false,
			HAC         : false,
			HKL         : false,
			HKM         : false,
			HUD         : false,
			IBOC        : false,
			IHKA        : false,
			IKE         : false,
			IRIS        : false,
			JNAV        : false,
			KBM         : false,
			KGM         : false,
			KHM         : false,
			KOMBI       : false,
			LCM         : false,
			LDM         : false,
			LM          : false,
			LSMC        : false,
			LWS         : false,
			MASK        : false,
			MDS         : false,
			MFL         : false,
			MID         : false,
			MM3         : false,
			MML         : false,
			MMR         : false,
			NAV         : false,
			NAVC        : false,
			NAVE        : false,
			NAVJ        : false,
			NBT         : false,
			NVC         : false,
			PDC         : false,
			PGS         : false,
			PIC         : false,
			RAD         : false,
			RCC         : false,
			RCSC        : false,
			RDC         : false,
			RLS         : false,
			RLSS        : false,
			RSC         : false,
			RSMC        : false,
			SC_CT       : false,
			SC_VDA      : false,
			SDARS       : false,
			SDRS        : false,
			SES         : false,
			SHD         : false,
			SHZH        : false,
			SINE        : false,
			SM          : false,
			SMAD        : false,
			SMG         : false,
			SOR         : false,
			SSG         : false,
			STH         : false,
			SZL         : false,
			SZM         : false,
			TCU         : false,
			TEL         : false,
			TLC         : false,
			VGSG        : false,
			VID         : false,
			VM          : false,
			VVT1        : false,
			VVT2        : false,
			api         : false,
			app_intf    : false,
			app_name    : false,
			app_path    : false,
			bitmask     : false,
			bluetooth   : false,
			bus         : false,
			config      : true,
			gpio        : false,
			hdmi_cec    : false,
			hdmi_rpi    : false,
			hex         : false,
			host_data   : false,
			json        : false,
			kodi        : false,
			log         : false,
			notify      : false,
			num         : false,
			obc_values  : false,
			objfmt      : false,
			power       : false,
			socket      : false,
			status      : true,
			terminating : false,
			update      : false,
		},
	},

	rules : {
		'accessor-pairs'        : 'error',
		'array-bracket-spacing' : [
			'error',
			'always',
		],
		'arrow-spacing' : [
			'error',
			{
				'after'  : true,
				'before' : true,
			},
		],
		'block-spacing' : [
			'error',
			'always',
		],
		'brace-style' : [
			'error',
			'stroustrup',
			{
				'allowSingleLine' : true,
			},
		],
		'camelcase'              : 'off',
		'class-methods-use-this' : 'off',
		'comma-dangle'           : [
			'error',
			{
				'arrays'    : 'always-multiline',
				'exports'   : 'always-multiline',
				'functions' : 'never',
				'imports'   : 'always-multiline',
				'objects'   : 'always-multiline',
			},
		],
		'comma-spacing' : [
			'error',
			{
				'after'  : true,
				'before' : false,
			},
		],
		'comma-style' : [
			'error',
			'last',
		],
		'constructor-super' : 'error',
		'curly'             : [
			'error',
			'multi-line',
		],
		'dot-location' : [
			'error',
			'property',
		],
		'eol-last'          : 'error',
		'eqeqeq'            : 'warn',
		'func-call-spacing' : [
			'error',
			'never',
		],
		'generator-star-spacing' : [
			'error',
			{
				'after'  : true,
				'before' : true,
			},
		],
		'handle-callback-err' : [
			'error',
			'^(err|error)$',
		],
		'indent' : [
			'error',
			'tab',
			{
				'SwitchCase' : 1,
			},
		],
		'key-spacing' : [
			'error',
			{
				'afterColon' : true,
				'align'      : {
					'afterColon'  : true,
					'beforeColon' : true,
					'mode'        : 'strict',
					'on'          : 'colon',
				},
				'beforeColon' : true,
				'mode'        : 'minimum',
			},
		],
		'keyword-spacing' : [
			'error',
			{
				'after'  : true,
				'before' : true,
			},
		],
		'linebreak-style' : [
			'error',
			'unix',
		],
		'new-cap'                  : 'off',
		'new-parens'               : 'error',
		'newline-per-chained-call' : 'off',
		'no-array-constructor'     : 'error',
		'no-caller'                : 'error',
		'no-class-assign'          : 'error',
		'no-compare-neg-zero'      : 'error',
		'no-cond-assign'           : 'error',
		'no-const-assign'          : 'error',
		'no-constant-condition'    : [
			'error',
			{
				'checkLoops' : false,
			},
		],
		'no-control-regex'         : 'error',
		'no-debugger'              : 'error',
		'no-delete-var'            : 'error',
		'no-dupe-args'             : 'error',
		'no-dupe-class-members'    : 'error',
		'no-dupe-keys'             : 'error',
		'no-duplicate-case'        : 'error',
		'no-empty-character-class' : 'error',
		'no-empty-pattern'         : 'error',
		'no-eval'                  : 'error',
		'no-ex-assign'             : 'error',
		'no-extend-native'         : 'error',
		'no-extra-bind'            : 'error',
		'no-extra-boolean-cast'    : 'error',
		'no-extra-parens'          : [
			'error',
			'functions',
		],
		'no-extra-semi'         : 'error',
		'no-fallthrough'        : 'error',
		'no-floating-decimal'   : 'error',
		'no-func-assign'        : 'error',
		'no-global-assign'      : 'error',
		'no-implied-eval'       : 'error',
		'no-inner-declarations' : [
			'error',
			'functions',
		],
		'no-invalid-regexp'       : 'error',
		'no-irregular-whitespace' : 'error',
		'no-iterator'             : 'error',
		'no-label-var'            : 'error',
		'no-labels'               : [
			'error',
			{
				'allowLoop'   : false,
				'allowSwitch' : false,
			},
		],
		'no-lone-blocks'     : 'error',
		'no-mixed-operators' : [
			'error',
			{
				'allowSamePrecedence' : true,
				'groups'              : [
					[
						'==',
						'!=',
						'===',
						'!==',
						'>',
						'>=',
						'<',
						'<=',
					],
					[
						'in',
						'instanceof',
					],
				],
			},
		],
		'no-mixed-spaces-and-tabs' : 'error',
		'no-multi-spaces'          : 'off',
		'no-multi-str'             : 'error',
		'no-multiple-empty-lines'  : [
			'error',
			{
				'max'    : 2,
				'maxBOF' : 0,
				'maxEOF' : 0,
			},
		],
		'no-negated-in-lhs' : 'error',
		'no-new'            : 'error',
		'no-new-func'       : 'error',
		'no-new-object'     : 'error',
		'no-new-require'    : 'error',
		'no-new-symbol'     : 'error',
		'no-new-wrappers'   : 'error',
		'no-obj-calls'      : 'error',
		'no-octal'          : 'error',
		'no-octal-escape'   : 'error',
		'no-path-concat'    : 'error',
		'no-proto'          : 'error',
		'no-redeclare'      : 'error',
		'no-regex-spaces'   : 'error',
		'no-return-assign'  : [
			'error',
			'except-parens',
		],
		'no-return-await'              : 'error',
		'no-self-assign'               : 'error',
		'no-self-compare'              : 'error',
		'no-sequences'                 : 'error',
		'no-shadow-restricted-names'   : 'error',
		'no-sparse-arrays'             : 'error',
		'no-tabs'                      : 'off',
		'no-template-curly-in-string'  : 'error',
		'no-this-before-super'         : 'error',
		'no-throw-literal'             : 'error',
		'no-trailing-spaces'           : 'error',
		'no-undef'                     : 'error',
		'no-undef-init'                : 'error',
		'no-unexpected-multiline'      : 'error',
		'no-unmodified-loop-condition' : 'error',
		'no-unneeded-ternary'          : [
			'error',
			{
				'defaultAssignment' : false,
			},
		],
		'no-unreachable'        : 'error',
		'no-unsafe-finally'     : 'error',
		'no-unsafe-negation'    : 'error',
		'no-unused-expressions' : [
			'error',
			{
				'allowShortCircuit'    : true,
				'allowTaggedTemplates' : true,
				'allowTernary'         : true,
			},
		],
		'no-unused-vars' : [
			'warn',
		],
		'no-use-before-define' : [
			'error',
			{
				'classes'   : false,
				'functions' : false,
				'variables' : false,
			},
		],
		'no-useless-call'               : 'error',
		'no-useless-computed-key'       : 'error',
		'no-useless-constructor'        : 'error',
		'no-useless-escape'             : 'error',
		'no-useless-rename'             : 'error',
		'no-useless-return'             : 'error',
		'no-whitespace-before-property' : 'error',
		'no-with'                       : 'error',

		// 'node/no-deprecated-api': 'error',
		// 'node/process-exit-as-throw': 'error',

		'object-curly-spacing' : [
			'error',
			'always',
		],
		'object-property-newline' : [
			'error',
			{
				'allowMultiplePropertiesPerLine' : true,
			},
		],
		'one-var' : [
			'error',
			{
				'initialized' : 'never',
			},
		],
		'operator-linebreak' : [
			'error',
			'after',
			{
				'overrides' : {
					':' : 'before',
					'?' : 'before',
				},
			},
		],
		'padded-blocks' : [
			'error',
			{
				'blocks'   : 'never',
				'classes'  : 'never',
				'switches' : 'never',
			},
		],
		'prefer-promise-reject-errors' : 'error',
		'quotes'                       : [
			'error',
			'single',
			{
				'allowTemplateLiterals' : true,
				'avoidEscape'           : true,
			},
		],
		'rest-spread-spacing' : [
			'error',
			'never',
		],
		'semi' : [
			'error',
			'always',
		],
		'semi-spacing' : [
			'error',
			{
				'after'  : true,
				'before' : false,
			},
		],
		'semi-style' : [
			'error',
			'last',
		],
		'space-before-blocks' : [
			'error',
			'always',
		],
		'space-before-function-paren' : [
			'error',
			{
				'anonymous'  : 'always',
				'asyncArrow' : 'always',
				'named'      : 'never',
			},
		],
		'space-in-parens' : [
			'error',
			'never',
		],
		'space-infix-ops' : 'warn',
		'space-unary-ops' : [
			'error',
			{
				'nonwords' : false,
				'words'    : true,
			},
		],
		'spaced-comment' : [
			'error',
			'always',
			{
				'block' : {
					'balanced'   : true,
					'exceptions' : [
						'*',
					],
					'markers' : [
						'*package',
						'!',
						',',
						':',
						'::',
						'flow-include',
					],
				},
				'line' : {
					'markers' : [
						'*package',
						'!',
						'/',
						',',
					],
				},
			},
		],
		'symbol-description'     : 'error',
		'template-curly-spacing' : [
			'error',
			'never',
		],
		'template-tag-spacing' : [
			'error',
			'never',
		],
		'unicode-bom' : [
			'error',
			'never',
		],
		'use-isnan'    : 'error',
		'valid-typeof' : [
			'error',
			{
				'requireStringLiterals' : true,
			},
		],
		'wrap-iife' : [
			'error',
			'any',
			{
				'functionPrototypeMethods' : true,
			},
		],
		'yield-star-spacing' : [
			'error',
			'both',
		],

		'yoda' : 'error',
	},
};


module.exports = [
	js.configs.recommended,

	{
		ignores : [ 'test/' ],
	},

	eslintConfig,
];
